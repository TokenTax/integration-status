{"version":3,"sources":["components/status/statuses.js","components/status/useStatus.js","components/status/useRefetch.js","components/status/index.js","components/useIssues.js","img/tt-logo1.png","components/header/index.js","components/components/skeleton.js","components/components/component/statuses.js","components/components/component/useStatus.js","components/components/component/status.js","components/components/component/index.js","components/useDidMount.js","components/components/index.js","components/footer/index.js","components/App.js","index.js"],"names":["message","backgroundColour","getComponentLabelPercent","components","label","filter","component","labels","find","componentLabel","name","length","useRefetch","refetch","updateTimeAgoDep","_useState","useState","moment","Date","localStorage","getItem","fromNow","_useState2","_slicedToArray","timeAgo","setTimeAgo","useEffect","interval","setInterval","clearInterval","StatusBar","styled","div","_templateObject","_taggedTemplateLiteral","props","Status","h2","_templateObject2","Reload","button","_templateObject3","Code","code","_templateObject4","_ref","loading","error","_useStatus","status","setStatus","statusSet","statuses","useStatus","_useRefetch","_jsxs","_Fragment","children","hasError","_jsx","JSON","stringify","errors","Math","round","onClick","fetchData","setLoading","setError","setResults","fetch","concat","then","response","json","data","setItem","catch","toString","parse","useIssue","results","_useState3","_useState4","_useState5","_useState6","Title","h1","Logo","img","HeaderComp","Header","src","logo","height","style","color","operational","colour","performanceIssues","partialOutage","majorOutage","unknown","Object","values","toLowerCase","StatusComp","Component","Components","title","useDidMount","hasMounted","setHasMounted","ComponentList","_useDidMount","map","id","Skeleton","FooterComp","Branding","a","visible","Footer","process","REACT_APP_BRANDING","href","rel","target","Container","ComponentsContainer","App","_useIssues","useIssues","_useIssues2","componentsLoading","componentsError","componentsResults","componentsRefetch","_useIssues3","_useIssues4","incidentsLoading","incidentsError","incidentsRefetch","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2d5c06e7.chunk.js","sourcesContent":["export default {\n  operational: {\n    message: \"All Integrations Operational\",\n    backgroundColour: \"#3da751\",\n  },\n  issues: {\n    message: \"Some systems are experiencing issues\",\n    backgroundColour: \"#4990e2\",\n  },\n  outage: {\n    message: \"Some systems are experiencing a major outage\",\n    backgroundColour: \"#d94430\",\n  },\n};\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nconst useStatus = (components) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    let statusSet = false;\n\n    if (getComponentLabelPercent(components, \"operational\") < 70) {\n      setStatus(statuses.issues);\n      statusSet = true;\n    }\n\n    if (getComponentLabelPercent(components, \"major outage\") > 0) {\n      setStatus(statuses.outage);\n      statusSet = true;\n    }\n\n    if (!statusSet) setStatus(statuses.operational);\n  }, [components]);\n\n  return [status];\n};\n\nconst getComponentLabelPercent = (components, label) =>\n  (components.filter((component) =>\n    component.labels.find((componentLabel) => componentLabel.name === label)\n  ).length *\n    100) /\n  components.length;\n\nexport { useStatus, getComponentLabelPercent };\n","import { useState, useEffect } from \"react\";\nimport moment from \"moment\";\n\nconst useRefetch = (refetch, updateTimeAgoDep) => {\n  const [timeAgo, setTimeAgo] = useState(\n    moment(\n      new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n    ).fromNow()\n  );\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`)) <\n        new Date() - 240000\n      ) {\n        refetch(() => {\n          setTimeAgo(\n            moment(\n              new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n            ).fromNow()\n          );\n        });\n      } else {\n        setTimeAgo(\n          moment(\n            new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n          ).fromNow()\n        );\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [refetch]);\n\n  useEffect(() => {\n    setTimeAgo(\n      moment(\n        new Date(localStorage.getItem(`issueStatusLastFetchcomponent`))\n      ).fromNow()\n    );\n  }, [updateTimeAgoDep]);\n\n  return [timeAgo];\n};\n\nexport default useRefetch;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useStatus, getComponentLabelPercent } from \"./useStatus\";\nimport useRefetch from \"./useRefetch\";\n\nconst StatusBar = styled.div`\n  background-color: ${(props) =>\n    props.backgroundColour ? props.backgroundColour : \"#b1b1b1\"};\n  color: white;\n  padding: 16px;\n  border-radius: 3px;\n  margin-bottom: 32px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  flex-wrap: wrap;\n  transition: 0.3s;\n`;\n\nconst Status = styled.h2`\n  font-size: 20px;\n  margin: 0;\n  font-weight: normal;\n`;\n\nconst Reload = styled.button`\n  background-color: transparent;\n  color: white;\n  text-decoration: underline;\n  border: none;\n  cursor: pointer;\n  text-align: right;\n  padding: 0;\n`;\n\nconst Code = styled.code`\n  white-space: pre-wrap;\n  display: block;\n`;\n\nexport default ({ loading, error, components, refetch }) => {\n  const [status] = useStatus(components);\n  const [timeAgo] = useRefetch(refetch, loading);\n\n  return (\n    <>\n      {error.hasError && (\n        <Code>\n          <div>An error occured</div>\n          <div>\n            You may have exceeded the rate limit. Try again in 1 hour to fetch\n            the latest data.\n          </div>\n          {JSON.stringify(error.errors, null, 3)}\n        </Code>\n      )}\n      <StatusBar backgroundColour={status?.backgroundColour}>\n        <Status>{status?.message}</Status>\n        <p>\n          {Math.round(getComponentLabelPercent(components, \"operational\"))}%\n          Operational\n        </p>\n        <Reload onClick={refetch}>\n          {loading ? \"reloading\" : \"Updated\" + \" \" + timeAgo}\n        </Reload>\n      </StatusBar>\n    </>\n  );\n};\n","import { useState, useEffect } from \"react\";\n\nconst useIssue = (label) => {\n  const [results, setResults] = useState([]);\n  const [error, setError] = useState();\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // GitHub rate limiting: 60 requests per hour/unauthenticated - fetches 15 times per hour / sending 30 requests (2 requests per fetch) and caches in localStorage\n    if (\n      new Date(localStorage.getItem(`issueStatusLastFetch${label}`)) <\n      new Date() - 240000\n    ) {\n      fetchData(setLoading, setError, setResults, label);\n    } else {\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n      setError();\n    }\n  }, [label]);\n\n  return [\n    loading,\n    error,\n    results || [],\n    () => fetchData(setLoading, setError, setResults, label),\n  ];\n};\n\nconst fetchData = (setLoading, setError, setResults, label) => {\n  setLoading(true);\n  fetch(\n    `https://api.github.com/repos/tokentax/integration-status/issues?state=all&labels=issue status,${label}`\n  )\n    .then((response) => {\n      return response.json();\n    })\n    .then((data) => {\n      setError();\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      localStorage.setItem(`issueStatus${label}`, JSON.stringify(data));\n      setResults(data);\n      setLoading(false);\n    })\n    .catch((error) => {\n      setError(error.toString());\n      localStorage.setItem(`issueStatusLastFetch${label}`, new Date());\n      setResults(JSON.parse(localStorage.getItem(`issueStatus${label}`)));\n      setLoading(false);\n    });\n};\n\nexport default useIssue;\n","export default __webpack_public_path__ + \"static/media/tt-logo1.fa3b2fa4.png\";","import React from \"react\";\nimport styled from \"styled-components\";\nimport logo from \"../../img/tt-logo1.png\";\n\nconst Title = styled.h1`\n  text-align: center;\n  margin-top: 0;\n  margin-bottom: 0;\n`;\n\nconst Logo = styled.img``;\n\nconst HeaderComp = styled.div`\n  text-align: center;\n  margin-bottom: 16px;\n`;\n\nconst Header = () =>\n  process.env.REACT_APP_LOGO || process.env.REACT_APP_NAME ? (\n    <HeaderComp>\n      <Logo src={logo} height=\"50\" />\n      <Title style={{ color: \"white\" }}>Integration Status</Title>\n    </HeaderComp>\n  ) : null;\n\nexport default Header;\n","import styled from \"styled-components\";\n\nexport default styled.div`\n  width: 100%;\n  height: 44px;\n  border-radius: 3px;\n  background-color: #f7f8f9;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n","const statuses = {\n  operational: {\n    name: \"Operational\",\n    colour: \"#247234\",\n    backgroundColour: \"rgba(61, 167, 81, 0.1)\",\n  },\n  performanceIssues: {\n    name: \"Performance Issues\",\n    colour: \"#2f5888\",\n    backgroundColour: \"rgba(73, 144, 226, 0.1)\",\n  },\n  partialOutage: {\n    name: \"Partial Outage\",\n    colour: \"#74582a\",\n    backgroundColour: \"rgba(255, 198, 103, 0.1)\",\n  },\n  majorOutage: {\n    name: \"Major Outage\",\n    colour: \"#8e3b31\",\n    backgroundColour: \"rgba(217, 68, 48, 0.1)\",\n  },\n  unknown: {\n    name: \"Unknown\",\n    colour: \"#6e6b6b\",\n    backgroundColour: \"rgba(177, 177, 177, 0.1)\",\n  },\n};\n\nexport default statuses;\n","import { useState, useEffect } from \"react\";\nimport statuses from \"./statuses\";\n\nconst useStatus = (labels) => {\n  const [status, setStatus] = useState();\n\n  useEffect(() => {\n    setStatus(\n      Object.values(statuses).find((status) =>\n        labels.find((label) => label.name === status.name.toLowerCase())\n      )\n    );\n  }, [labels]);\n\n  if (!status) setStatus(statuses.unknown);\n\n  return [status];\n};\n\nexport default useStatus;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport useStatus from \"./useStatus\";\n\nconst StatusComp = styled.div`\n  color: ${(props) => props.colour};\n  background-color: ${(props) => props.backgroundColour};\n  padding: 5px 12px;\n  border-radius: 16px;\n  font-size: 13px;\n  transition: 0.3s;\n`;\n\nconst Status = ({ labels }) => {\n  const [status] = useStatus(labels);\n\n  return (\n    <StatusComp\n      colour={status?.colour}\n      backgroundColour={status?.backgroundColour}\n    >\n      {status?.name}\n    </StatusComp>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport Status from \"./status\";\n\nconst Component = styled.div`\n  background-color: #f7f8f9;\n  padding: 8px 16px;\n  border-radius: 3px;\n  justify-content: space-between;\n  align-items: center;\n  display: flex;\n\n  :not(:last-child) {\n    margin-bottom: 8px;\n  }\n`;\n\nconst Components = ({ component }) => {\n  return (\n    <Component>\n      {component.title} <Status labels={component.labels} />\n    </Component>\n  );\n};\n\nexport default Components;\n","import { useEffect, useState } from \"react\";\n\nconst useDidMount = () => {\n  const [hasMounted, setHasMounted] = useState();\n\n  useEffect(() => {\n    setHasMounted(true);\n  }, []);\n\n  return [hasMounted];\n};\n\nexport default useDidMount;\n","import React from \"react\";\nimport Skeleton from \"./skeleton\";\nimport Component from \"./component\";\nimport useDidMount from \"../useDidMount\";\n\nconst ComponentList = ({ loading, components }) => {\n  const [hasMounted] = useDidMount();\n\n  return !loading || hasMounted ? (\n    components?.length > 0 ? (\n      components?.map((component) => (\n        <Component key={component.id} component={component} />\n      ))\n    ) : (\n      <p>No Components found.</p>\n    )\n  ) : (\n    <>\n      <Skeleton />\n      <Skeleton />\n      <Skeleton />\n    </>\n  );\n};\n\nexport default ComponentList;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst FooterComp = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 16px;\n`;\n\nconst Branding = styled.a`\n  color: #6e6b6b;\n  font-size: 13px;\n  text-decoration: none;\n  transition: 0.3s;\n  display: ${(props) => (props.visible ? \"block\" : \"none\")};\n\n  :hover {\n    opacity: 0.9;\n  }\n`;\nconst Footer = () => (\n  <FooterComp>\n    <div></div>\n    <Branding\n      visible={process.env.REACT_APP_BRANDING !== \"false\"}\n      href=\"https://github.com/tokentax/integration-status\"\n      rel=\"noopener\"\n      target=\"_blank\"\n    ></Branding>\n  </FooterComp>\n);\n\nexport default Footer;\n","import React from \"react\";\nimport \"./App.css\";\nimport styled from \"styled-components\";\nimport Status from \"./status\";\nimport useIssues from \"./useIssues\";\nimport Header from \"./header\";\nimport Components from \"./components\";\n// import Incidents from \"./incidents\";\nimport Footer from \"./footer\";\n\nconst Container = styled.div`\n  max-width: 1008px;\n  padding: 16px;\n  margin: 16px auto;\n`;\n\nconst ComponentsContainer = styled.div`\n  box-shadow: 0px 0px 33px -32px rgba(0, 0, 0, 0.75);\n  border-radius: 3px;\n  background-color: white;\n  padding: 16px;\n`;\n\nconst App = () => {\n  // loading, errors, results, refetch\n  const [\n    componentsLoading,\n    componentsError,\n    componentsResults,\n    componentsRefetch,\n  ] = useIssues(\"component\");\n  const [incidentsLoading, incidentsError, incidentsResults, incidentsRefetch] =\n    useIssues(\"incident\");\n\n  return (\n    <Container>\n      <Header />\n      <ComponentsContainer>\n        <Status\n          loading={componentsLoading || incidentsLoading}\n          error={{\n            hasError: componentsError || incidentsError,\n            errors: { componentsError, incidentsError },\n          }}\n          components={componentsResults}\n          refetch={() => {\n            componentsRefetch();\n            incidentsRefetch();\n          }}\n        />\n        <Components\n          loading={componentsLoading}\n          components={componentsResults}\n        />\n      </ComponentsContainer>\n      {/* <Incidents loading={incidentsLoading} incidents={incidentsResults} /> */}\n      <Footer />\n    </Container>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}